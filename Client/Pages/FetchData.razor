@page "/fetchdata"
@using ToDo.Shared
@inject HttpClient Http


<h1>Categories</h1>

<p>This component demonstrates fetching data from the server.</p>
<div class="row">
    <div class="col-md-6">
        <input class="form-control mb-3" type="text" @bind-value="newCat.Title" placeholder="Title" />
        <input class="form-control mb-3" type="text" @bind-value="newCat.Sort" placeholder="Sort" />
        <input class="form-control mb-3" type="text" @bind-value="newCat.Active" placeholder="Active" />
        <button class="btn btn-outline-success" @onclick="AddCategory"> Submit </button>
    </div>
    <div class="col-md-6">
        @if (categories == null)
        {
            <p><em>Loading... fetching data from the server</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Active (F)</th>
                        <th>Sort</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in categories)
                    {
                        <tr>
                            <td>@category.CategoryID</td>
                            <td>@category.Title</td>
                            <td>@category.Active</td>
                            <td>@category.Sort</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

    </div>
</div>



@code {
    private Category[] categories;
    private Category newCat = new Category();

    protected override async Task OnInitializedAsync()
    {
        categories = await Http.GetFromJsonAsync<Category[]>("api/category");
    }

    public async Task AddCategory() {
        List<TodoItem> MyDoList = new List<TodoItem>()
         {
            new TodoItem(){Title="Style this list", Active=1, Sort=1},
            new TodoItem(){Title="Fix a bug", Active=1, Sort=1},
            new TodoItem(){Title="Build a feature", Active=1, Sort=1},
            new TodoItem(){Title="Create a PR", Active=1, Sort=1}
        }; 
       // MyDoList.Add();

       newCat.ToDo = MyDoList;

        
        await Http.PostAsJsonAsync<Category>("api/Category", newCat);
            await OnInitializedAsync();
    }

}
